#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Modules.Channel.B2B.DAL
{
    using System.Data.Linq;
    using System.Data.Linq.Mapping;
    using System.Data;
    using System.Collections.Generic;
    using System.Reflection;
    using System.Linq;
    using System.Linq.Expressions;
    using System.ComponentModel;
    using System;


    [global::System.Data.Linq.Mapping.DatabaseAttribute(Name = "ASNDB")]
    public partial class AsnDatamodelDataContext : System.Data.Linq.DataContext
    {

        private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();

        #region Extensibility Method Definitions
        partial void OnCreated();
        partial void InsertASNQueue(ASNQueue instance);
        partial void UpdateASNQueue(ASNQueue instance);
        partial void DeleteASNQueue(ASNQueue instance);
        partial void InsertASNItemMapping(ASNItemMapping instance);
        partial void UpdateASNItemMapping(ASNItemMapping instance);
        partial void DeleteASNItemMapping(ASNItemMapping instance);
        partial void InsertASNOrderMapping(ASNOrderMapping instance);
        partial void UpdateASNOrderMapping(ASNOrderMapping instance);
        partial void DeleteASNOrderMapping(ASNOrderMapping instance);
        #endregion

        public AsnDatamodelDataContext() :
            base(global::Modules.Channel.Properties.Settings.Default.ASNDBConnectionString, mappingSource)
        {
            OnCreated();
        }

        public AsnDatamodelDataContext(string connection) :
            base(connection, mappingSource)
        {
            OnCreated();
        }

        public AsnDatamodelDataContext(System.Data.IDbConnection connection) :
            base(connection, mappingSource)
        {
            OnCreated();
        }

        public AsnDatamodelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
            base(connection, mappingSource)
        {
            OnCreated();
        }

        public AsnDatamodelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
            base(connection, mappingSource)
        {
            OnCreated();
        }

        public System.Data.Linq.Table<ASNQueue> ASNQueues
        {
            get
            {
                return this.GetTable<ASNQueue>();
            }
        }

        public System.Data.Linq.Table<ASNItemMapping> ASNItemMappings
        {
            get
            {
                return this.GetTable<ASNItemMapping>();
            }
        }

        public System.Data.Linq.Table<ASNOrderMapping> ASNOrderMappings
        {
            get
            {
                return this.GetTable<ASNOrderMapping>();
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.ASNQueue")]
    public partial class ASNQueue : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _DocId;

        private string _ThreadId;

        private string _DPID;

        private string _PONumber;

        private System.Nullable<int> _LineNumber;

        private System.Nullable<int> _Status;

        private System.Nullable<int> _Quantity;

        private System.Nullable<decimal> _UnitPrice;

        private string _Partner;

        private string _VendorPartNumber;

        private string _BuyerSKU;

        private System.Nullable<System.DateTime> _CreatedDate;

        private System.Nullable<System.DateTime> _ModifiedDate;

        private int _AttemptCount;

        private System.DateTime _LastAttemptedDate;

        private int _OGStatus;

        private System.Data.Linq.Binary _RowVersion;

        private System.Nullable<System.DateTime> _Locked;

        private string _LockedBy;

        private string _InternalVendorNumber;

        private int _DeliveryPreference;

        private EntitySet<ASNItemMapping> _ASNItemMappings;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnDocIdChanging(int value);
        partial void OnDocIdChanged();
        partial void OnThreadIdChanging(string value);
        partial void OnThreadIdChanged();
        partial void OnDPIDChanging(string value);
        partial void OnDPIDChanged();
        partial void OnPONumberChanging(string value);
        partial void OnPONumberChanged();
        partial void OnLineNumberChanging(System.Nullable<int> value);
        partial void OnLineNumberChanged();
        partial void OnStatusChanging(System.Nullable<int> value);
        partial void OnStatusChanged();
        partial void OnQuantityChanging(System.Nullable<int> value);
        partial void OnQuantityChanged();
        partial void OnUnitPriceChanging(System.Nullable<decimal> value);
        partial void OnUnitPriceChanged();
        partial void OnPartnerChanging(string value);
        partial void OnPartnerChanged();
        partial void OnVendorPartNumberChanging(string value);
        partial void OnVendorPartNumberChanged();
        partial void OnBuyerSKUChanging(string value);
        partial void OnBuyerSKUChanged();
        partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
        partial void OnCreatedDateChanged();
        partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
        partial void OnModifiedDateChanged();
        partial void OnAttemptCountChanging(int value);
        partial void OnAttemptCountChanged();
        partial void OnLastAttemptedDateChanging(System.DateTime value);
        partial void OnLastAttemptedDateChanged();
        partial void OnOGStatusChanging(int value);
        partial void OnOGStatusChanged();
        partial void OnRowVersionChanging(System.Data.Linq.Binary value);
        partial void OnRowVersionChanged();
        partial void OnLockedChanging(System.Nullable<System.DateTime> value);
        partial void OnLockedChanged();
        partial void OnLockedByChanging(string value);
        partial void OnLockedByChanged();
        partial void OnInternalVendorNumberChanging(string value);
        partial void OnInternalVendorNumberChanged();
        partial void OnDeliveryPreferenceChanging(int value);
        partial void OnDeliveryPreferenceChanged();
        #endregion

        public ASNQueue()
        {
            this._ASNItemMappings = new EntitySet<ASNItemMapping>(new Action<ASNItemMapping>(this.attach_ASNItemMappings), new Action<ASNItemMapping>(this.detach_ASNItemMappings));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocId", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true, UpdateCheck = UpdateCheck.Never)]
        public int DocId
        {
            get
            {
                return this._DocId;
            }
            set
            {
                if ((this._DocId != value))
                {
                    this.OnDocIdChanging(value);
                    this.SendPropertyChanging();
                    this._DocId = value;
                    this.SendPropertyChanged("DocId");
                    this.OnDocIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ThreadId", DbType = "NVarChar(30)", UpdateCheck = UpdateCheck.Never)]
        public string ThreadId
        {
            get
            {
                return this._ThreadId;
            }
            set
            {
                if ((this._ThreadId != value))
                {
                    this.OnThreadIdChanging(value);
                    this.SendPropertyChanging();
                    this._ThreadId = value;
                    this.SendPropertyChanged("ThreadId");
                    this.OnThreadIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DPID", DbType = "NVarChar(30)", UpdateCheck = UpdateCheck.Never)]
        public string DPID
        {
            get
            {
                return this._DPID;
            }
            set
            {
                if ((this._DPID != value))
                {
                    this.OnDPIDChanging(value);
                    this.SendPropertyChanging();
                    this._DPID = value;
                    this.SendPropertyChanged("DPID");
                    this.OnDPIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PONumber", DbType = "NVarChar(30)", UpdateCheck = UpdateCheck.Never)]
        public string PONumber
        {
            get
            {
                return this._PONumber;
            }
            set
            {
                if ((this._PONumber != value))
                {
                    this.OnPONumberChanging(value);
                    this.SendPropertyChanging();
                    this._PONumber = value;
                    this.SendPropertyChanged("PONumber");
                    this.OnPONumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LineNumber", DbType = "Int", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> LineNumber
        {
            get
            {
                return this._LineNumber;
            }
            set
            {
                if ((this._LineNumber != value))
                {
                    this.OnLineNumberChanging(value);
                    this.SendPropertyChanging();
                    this._LineNumber = value;
                    this.SendPropertyChanged("LineNumber");
                    this.OnLineNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Status", DbType = "Int", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> Status
        {
            get
            {
                return this._Status;
            }
            set
            {
                if ((this._Status != value))
                {
                    this.OnStatusChanging(value);
                    this.SendPropertyChanging();
                    this._Status = value;
                    this.SendPropertyChanged("Status");
                    this.OnStatusChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Quantity", DbType = "Int", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> Quantity
        {
            get
            {
                return this._Quantity;
            }
            set
            {
                if ((this._Quantity != value))
                {
                    this.OnQuantityChanging(value);
                    this.SendPropertyChanging();
                    this._Quantity = value;
                    this.SendPropertyChanged("Quantity");
                    this.OnQuantityChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UnitPrice", DbType = "Decimal(18,2)", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> UnitPrice
        {
            get
            {
                return this._UnitPrice;
            }
            set
            {
                if ((this._UnitPrice != value))
                {
                    this.OnUnitPriceChanging(value);
                    this.SendPropertyChanging();
                    this._UnitPrice = value;
                    this.SendPropertyChanged("UnitPrice");
                    this.OnUnitPriceChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Partner", DbType = "NVarChar(25)", UpdateCheck = UpdateCheck.Never)]
        public string Partner
        {
            get
            {
                return this._Partner;
            }
            set
            {
                if ((this._Partner != value))
                {
                    this.OnPartnerChanging(value);
                    this.SendPropertyChanging();
                    this._Partner = value;
                    this.SendPropertyChanged("Partner");
                    this.OnPartnerChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VendorPartNumber", DbType = "NVarChar(30)", UpdateCheck = UpdateCheck.Never)]
        public string VendorPartNumber
        {
            get
            {
                return this._VendorPartNumber;
            }
            set
            {
                if ((this._VendorPartNumber != value))
                {
                    this.OnVendorPartNumberChanging(value);
                    this.SendPropertyChanging();
                    this._VendorPartNumber = value;
                    this.SendPropertyChanged("VendorPartNumber");
                    this.OnVendorPartNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BuyerSKU", DbType = "NVarChar(15)", UpdateCheck = UpdateCheck.Never)]
        public string BuyerSKU
        {
            get
            {
                return this._BuyerSKU;
            }
            set
            {
                if ((this._BuyerSKU != value))
                {
                    this.OnBuyerSKUChanging(value);
                    this.SendPropertyChanging();
                    this._BuyerSKU = value;
                    this.SendPropertyChanged("BuyerSKU");
                    this.OnBuyerSKUChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedDate", DbType = "DateTime", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> CreatedDate
        {
            get
            {
                return this._CreatedDate;
            }
            set
            {
                if ((this._CreatedDate != value))
                {
                    this.OnCreatedDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedDate = value;
                    this.SendPropertyChanged("CreatedDate");
                    this.OnCreatedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ModifiedDate", DbType = "DateTime", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> ModifiedDate
        {
            get
            {
                return this._ModifiedDate;
            }
            set
            {
                if ((this._ModifiedDate != value))
                {
                    this.OnModifiedDateChanging(value);
                    this.SendPropertyChanging();
                    this._ModifiedDate = value;
                    this.SendPropertyChanged("ModifiedDate");
                    this.OnModifiedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AttemptCount", DbType = "Int NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int AttemptCount
        {
            get
            {
                return this._AttemptCount;
            }
            set
            {
                if ((this._AttemptCount != value))
                {
                    this.OnAttemptCountChanging(value);
                    this.SendPropertyChanging();
                    this._AttemptCount = value;
                    this.SendPropertyChanged("AttemptCount");
                    this.OnAttemptCountChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LastAttemptedDate", DbType = "DateTime NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime LastAttemptedDate
        {
            get
            {
                return this._LastAttemptedDate;
            }
            set
            {
                if ((this._LastAttemptedDate != value))
                {
                    this.OnLastAttemptedDateChanging(value);
                    this.SendPropertyChanging();
                    this._LastAttemptedDate = value;
                    this.SendPropertyChanged("LastAttemptedDate");
                    this.OnLastAttemptedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OGStatus", DbType = "Int NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int OGStatus
        {
            get
            {
                return this._OGStatus;
            }
            set
            {
                if ((this._OGStatus != value))
                {
                    this.OnOGStatusChanging(value);
                    this.SendPropertyChanging();
                    this._OGStatus = value;
                    this.SendPropertyChanged("OGStatus");
                    this.OnOGStatusChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RowVersion", AutoSync = AutoSync.Always, DbType = "rowversion NOT NULL", CanBeNull = false, IsDbGenerated = true, IsVersion = true, UpdateCheck = UpdateCheck.Never)]
        public System.Data.Linq.Binary RowVersion
        {
            get
            {
                return this._RowVersion;
            }
            set
            {
                if ((this._RowVersion != value))
                {
                    this.OnRowVersionChanging(value);
                    this.SendPropertyChanging();
                    this._RowVersion = value;
                    this.SendPropertyChanged("RowVersion");
                    this.OnRowVersionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Locked", DbType = "DateTime", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> Locked
        {
            get
            {
                return this._Locked;
            }
            set
            {
                if ((this._Locked != value))
                {
                    this.OnLockedChanging(value);
                    this.SendPropertyChanging();
                    this._Locked = value;
                    this.SendPropertyChanged("Locked");
                    this.OnLockedChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LockedBy", DbType = "NVarChar(20)", UpdateCheck = UpdateCheck.Never)]
        public string LockedBy
        {
            get
            {
                return this._LockedBy;
            }
            set
            {
                if ((this._LockedBy != value))
                {
                    this.OnLockedByChanging(value);
                    this.SendPropertyChanging();
                    this._LockedBy = value;
                    this.SendPropertyChanged("LockedBy");
                    this.OnLockedByChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InternalVendorNumber", DbType = "VarChar(255) NOT NULL", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
        public string InternalVendorNumber
        {
            get
            {
                return this._InternalVendorNumber;
            }
            set
            {
                if ((this._InternalVendorNumber != value))
                {
                    this.OnInternalVendorNumberChanging(value);
                    this.SendPropertyChanging();
                    this._InternalVendorNumber = value;
                    this.SendPropertyChanged("InternalVendorNumber");
                    this.OnInternalVendorNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DeliveryPreference", DbType = "Int NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int DeliveryPreference
        {
            get
            {
                return this._DeliveryPreference;
            }
            set
            {
                if ((this._DeliveryPreference != value))
                {
                    this.OnDeliveryPreferenceChanging(value);
                    this.SendPropertyChanging();
                    this._DeliveryPreference = value;
                    this.SendPropertyChanged("DeliveryPreference");
                    this.OnDeliveryPreferenceChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "ASNQueue_ASNItemMapping", Storage = "_ASNItemMappings", ThisKey = "DocId", OtherKey = "DocId")]
        public EntitySet<ASNItemMapping> ASNItemMappings
        {
            get
            {
                return this._ASNItemMappings;
            }
            set
            {
                this._ASNItemMappings.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_ASNItemMappings(ASNItemMapping entity)
        {
            this.SendPropertyChanging();
            entity.ASNQueue = this;
        }

        private void detach_ASNItemMappings(ASNItemMapping entity)
        {
            this.SendPropertyChanging();
            entity.ASNQueue = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.ASNItemMapping")]
    public partial class ASNItemMapping : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _MapItemId;

        private System.Nullable<int> _DocId;

        private System.Nullable<System.Guid> _FulfillmentItemId;

        private EntitySet<ASNOrderMapping> _ASNOrderMappings;

        private EntityRef<ASNQueue> _ASNQueue;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnMapItemIdChanging(int value);
        partial void OnMapItemIdChanged();
        partial void OnDocIdChanging(System.Nullable<int> value);
        partial void OnDocIdChanged();
        partial void OnFulfillmentItemIdChanging(System.Nullable<System.Guid> value);
        partial void OnFulfillmentItemIdChanged();
        #endregion

        public ASNItemMapping()
        {
            this._ASNOrderMappings = new EntitySet<ASNOrderMapping>(new Action<ASNOrderMapping>(this.attach_ASNOrderMappings), new Action<ASNOrderMapping>(this.detach_ASNOrderMappings));
            this._ASNQueue = default(EntityRef<ASNQueue>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MapItemId", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int MapItemId
        {
            get
            {
                return this._MapItemId;
            }
            set
            {
                if ((this._MapItemId != value))
                {
                    this.OnMapItemIdChanging(value);
                    this.SendPropertyChanging();
                    this._MapItemId = value;
                    this.SendPropertyChanged("MapItemId");
                    this.OnMapItemIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DocId", DbType = "Int")]
        public System.Nullable<int> DocId
        {
            get
            {
                return this._DocId;
            }
            set
            {
                if ((this._DocId != value))
                {
                    if (this._ASNQueue.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnDocIdChanging(value);
                    this.SendPropertyChanging();
                    this._DocId = value;
                    this.SendPropertyChanged("DocId");
                    this.OnDocIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FulfillmentItemId", DbType = "UniqueIdentifier")]
        public System.Nullable<System.Guid> FulfillmentItemId
        {
            get
            {
                return this._FulfillmentItemId;
            }
            set
            {
                if ((this._FulfillmentItemId != value))
                {
                    this.OnFulfillmentItemIdChanging(value);
                    this.SendPropertyChanging();
                    this._FulfillmentItemId = value;
                    this.SendPropertyChanged("FulfillmentItemId");
                    this.OnFulfillmentItemIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "ASNItemMapping_ASNOrderMapping", Storage = "_ASNOrderMappings", ThisKey = "MapItemId", OtherKey = "MapItemId")]
        public EntitySet<ASNOrderMapping> ASNOrderMappings
        {
            get
            {
                return this._ASNOrderMappings;
            }
            set
            {
                this._ASNOrderMappings.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "ASNQueue_ASNItemMapping", Storage = "_ASNQueue", ThisKey = "DocId", OtherKey = "DocId", IsForeignKey = true)]
        public ASNQueue ASNQueue
        {
            get
            {
                return this._ASNQueue.Entity;
            }
            set
            {
                ASNQueue previousValue = this._ASNQueue.Entity;
                if (((previousValue != value)
                            || (this._ASNQueue.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._ASNQueue.Entity = null;
                        previousValue.ASNItemMappings.Remove(this);
                    }
                    this._ASNQueue.Entity = value;
                    if ((value != null))
                    {
                        value.ASNItemMappings.Add(this);
                        this._DocId = value.DocId;
                    }
                    else
                    {
                        this._DocId = default(Nullable<int>);
                    }
                    this.SendPropertyChanged("ASNQueue");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_ASNOrderMappings(ASNOrderMapping entity)
        {
            this.SendPropertyChanging();
            entity.ASNItemMapping = this;
        }

        private void detach_ASNOrderMappings(ASNOrderMapping entity)
        {
            this.SendPropertyChanging();
            entity.ASNItemMapping = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.ASNOrderMapping")]
    public partial class ASNOrderMapping : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _OrderId;

        private System.Nullable<int> _MapItemId;

        private string _OrderNumber;

        private EntityRef<ASNItemMapping> _ASNItemMapping;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnOrderIdChanging(int value);
        partial void OnOrderIdChanged();
        partial void OnMapItemIdChanging(System.Nullable<int> value);
        partial void OnMapItemIdChanged();
        partial void OnOrderNumberChanging(string value);
        partial void OnOrderNumberChanged();
        #endregion

        public ASNOrderMapping()
        {
            this._ASNItemMapping = default(EntityRef<ASNItemMapping>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OrderId", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int OrderId
        {
            get
            {
                return this._OrderId;
            }
            set
            {
                if ((this._OrderId != value))
                {
                    this.OnOrderIdChanging(value);
                    this.SendPropertyChanging();
                    this._OrderId = value;
                    this.SendPropertyChanged("OrderId");
                    this.OnOrderIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MapItemId", DbType = "Int")]
        public System.Nullable<int> MapItemId
        {
            get
            {
                return this._MapItemId;
            }
            set
            {
                if ((this._MapItemId != value))
                {
                    if (this._ASNItemMapping.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnMapItemIdChanging(value);
                    this.SendPropertyChanging();
                    this._MapItemId = value;
                    this.SendPropertyChanged("MapItemId");
                    this.OnMapItemIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OrderNumber", DbType = "VarChar(20)")]
        public string OrderNumber
        {
            get
            {
                return this._OrderNumber;
            }
            set
            {
                if ((this._OrderNumber != value))
                {
                    this.OnOrderNumberChanging(value);
                    this.SendPropertyChanging();
                    this._OrderNumber = value;
                    this.SendPropertyChanged("OrderNumber");
                    this.OnOrderNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "ASNItemMapping_ASNOrderMapping", Storage = "_ASNItemMapping", ThisKey = "MapItemId", OtherKey = "MapItemId", IsForeignKey = true)]
        public ASNItemMapping ASNItemMapping
        {
            get
            {
                return this._ASNItemMapping.Entity;
            }
            set
            {
                ASNItemMapping previousValue = this._ASNItemMapping.Entity;
                if (((previousValue != value)
                            || (this._ASNItemMapping.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._ASNItemMapping.Entity = null;
                        previousValue.ASNOrderMappings.Remove(this);
                    }
                    this._ASNItemMapping.Entity = value;
                    if ((value != null))
                    {
                        value.ASNOrderMappings.Add(this);
                        this._MapItemId = value.MapItemId;
                    }
                    else
                    {
                        this._MapItemId = default(Nullable<int>);
                    }
                    this.SendPropertyChanged("ASNItemMapping");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }
}
#pragma warning restore 1591
